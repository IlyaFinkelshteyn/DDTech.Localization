//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DDTech.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Licensing {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Licensing() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DDTech.Localization.Licensing", typeof(Licensing).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer Name.
        /// </summary>
        public static string CustomerName {
            get {
                return ResourceManager.GetString("CustomerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E-Mail.
        /// </summary>
        public static string Email {
            get {
                return ResourceManager.GetString("Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expires.
        /// </summary>
        public static string Expires {
            get {
                return ResourceManager.GetString("Expires", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Details.
        /// </summary>
        public static string LicenseDetails {
            get {
                return ResourceManager.GetString("LicenseDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your current license does not include the {0}.
        /// </summary>
        public static string LicenseDoesntIncludeFormat {
            get {
                return ResourceManager.GetString("LicenseDoesntIncludeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licensed Sites.
        /// </summary>
        public static string LicensedSites {
            get {
                return ResourceManager.GetString("LicensedSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R+ License Expired..
        /// </summary>
        public static string LicenseExpired {
            get {
                return ResourceManager.GetString("LicenseExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R+ License Invalid..
        /// </summary>
        public static string LicenseInvalid {
            get {
                return ResourceManager.GetString("LicenseInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your R+ subscription is valid forever.
        /// </summary>
        public static string LicenseValidForever {
            get {
                return ResourceManager.GetString("LicenseValidForever", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your R+ subscription is valid until.
        /// </summary>
        public static string LicenseValidUntil {
            get {
                return ResourceManager.GetString("LicenseValidUntil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New R+ License Successfully Uploaded.
        /// </summary>
        public static string NewLicenseUploaded {
            get {
                return ResourceManager.GetString("NewLicenseUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No additional modules purchased.
        /// </summary>
        public static string NoModulesPurchased {
            get {
                return ResourceManager.GetString("NoModulesPurchased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only .lic files can be uploaded.
        /// </summary>
        public static string OnlyLICFiles {
            get {
                return ResourceManager.GetString("OnlyLICFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchased Modules.
        /// </summary>
        public static string PurchasedModules {
            get {
                return ResourceManager.GetString("PurchasedModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To request information on enabling this functionality, please contact.
        /// </summary>
        public static string ToRequestPleaseContact {
            get {
                return ResourceManager.GetString("ToRequestPleaseContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload New R+ License.
        /// </summary>
        public static string UploadNewLicense {
            get {
                return ResourceManager.GetString("UploadNewLicense", resourceCulture);
            }
        }
    }
}
