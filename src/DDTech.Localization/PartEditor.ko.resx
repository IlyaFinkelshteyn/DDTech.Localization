<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="AddNewPart" xml:space="preserve">
    <value>신규 품목 추가</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>확실합니까?</value>
  </data>
  <data name="AverageDailyUsage" xml:space="preserve">
    <value>일평균사용량</value>
  </data>
  <data name="BufferSizing" xml:space="preserve">
    <value>버퍼크기 설정</value>
  </data>
  <data name="BufferValuesIncompatibleWithRenderingChart" xml:space="preserve">
    <value>버퍼 값이 랜더링 챠트와 불일치</value>
  </data>
  <data name="Buy" xml:space="preserve">
    <value>구매</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>삭제 확인</value>
  </data>
  <data name="CurrentPAFIs" xml:space="preserve">
    <value>현 PAF</value>
  </data>
  <data name="CycleDayAdjustmentFactor" xml:space="preserve">
    <value>주기 하루 조정률</value>
  </data>
  <data name="CycleDayAdjustmentFactorDaysCoverage" xml:space="preserve">
    <value>{CDAFDaysCoverage} 일</value>
  </data>
  <data name="CycleDayAdjustmentFactorToolTip" xml:space="preserve">
    <value>만 시작 날짜는 CDAF 오게 될 것입니다 앞으로 R + 리드 타임에 의해 유효성을 시험 하기 위하여, 기억 하십시오.</value>
  </data>
  <data name="DaysConsumption" xml:space="preserve">
    <value>재고일수</value>
  </data>
  <data name="DecoupledLeadTime" xml:space="preserve">
    <value>Decoupled lead time</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>명세:</value>
  </data>
  <data name="EffectiveDailyUsage" xml:space="preserve">
    <value>일사용량 선택 </value>
  </data>
  <data name="EnterName" xml:space="preserve">
    <value>이름 입력</value>
  </data>
  <data name="EnterRevision" xml:space="preserve">
    <value>Revision 입력</value>
  </data>
  <data name="ExpectedAvgInventory" xml:space="preserve">
    <value>예상평균재고</value>
  </data>
  <data name="FixedLeadTime" xml:space="preserve">
    <value>고정 리드타임</value>
  </data>
  <data name="ForecastedDailyUsage" xml:space="preserve">
    <value>일사용 예측량</value>
  </data>
  <data name="Green" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="InventoryManagement" xml:space="preserve">
    <value>재고관리유형</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Make" xml:space="preserve">
    <value>생산</value>
  </data>
  <data name="MaterialType" xml:space="preserve">
    <value>자재타입</value>
  </data>
  <data name="Max" xml:space="preserve">
    <value>Max</value>
  </data>
  <data name="MaximumOrder" xml:space="preserve">
    <value>Max 오더량</value>
  </data>
  <data name="Min" xml:space="preserve">
    <value>Min</value>
  </data>
  <data name="MinimumOrder" xml:space="preserve">
    <value>Min 오더량</value>
  </data>
  <data name="ModelAPart" xml:space="preserve">
    <value>Model a Part</value>
  </data>
  <data name="NBAndLTMPartsNoSizingValues" xml:space="preserve">
    <value>Non-bufferd, LTM 품목은 버퍼크기가 없음.</value>
  </data>
  <data name="NoDataToDisplay" xml:space="preserve">
    <value>데이터 없슴</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="OrderCycleOverride" xml:space="preserve">
    <value>오더주기 Override</value>
  </data>
  <data name="OrderMultiple" xml:space="preserve">
    <value>오더 배수</value>
  </data>
  <data name="OrderPolicy" xml:space="preserve">
    <value>오더 정책</value>
  </data>
  <data name="OutSourcedCost" xml:space="preserve">
    <value>외주비</value>
  </data>
  <data name="Part" xml:space="preserve">
    <value>품목</value>
  </data>
  <data name="PartAddedSuccessfully" xml:space="preserve">
    <value>품목 추가 완료</value>
  </data>
  <data name="PartDeletedSuccessfully" xml:space="preserve">
    <value>품목 삭제 완료</value>
  </data>
  <data name="PartNumber" xml:space="preserve">
    <value>품목번호</value>
  </data>
  <data name="PartSavedSuccessfully" xml:space="preserve">
    <value>품목 저장 완료</value>
  </data>
  <data name="PartsEdit" xml:space="preserve">
    <value>품목 편집</value>
  </data>
  <data name="PartType" xml:space="preserve">
    <value>품목 Type</value>
  </data>
  <data name="PlannedAdjustmentFactor" xml:space="preserve">
    <value>PAF:</value>
  </data>
  <data name="PlannerCode" xml:space="preserve">
    <value>플래너 코드</value>
  </data>
  <data name="RawMaterialCost" xml:space="preserve">
    <value>재료비</value>
  </data>
  <data name="Red" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="Rev" xml:space="preserve">
    <value>REV</value>
  </data>
  <data name="Revision" xml:space="preserve">
    <value>Revision</value>
  </data>
  <data name="RPlusLeadTime" xml:space="preserve">
    <value>R+리드타임</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>검색</value>
  </data>
  <data name="SearchPart" xml:space="preserve">
    <value>품목 검색...</value>
  </data>
  <data name="SearchResults" xml:space="preserve">
    <value>검색 결과</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>(전체선택)</value>
  </data>
  <data name="SelectFilter" xml:space="preserve">
    <value>필터선택</value>
  </data>
  <data name="TopOfGreen" xml:space="preserve">
    <value>Top of Green</value>
  </data>
  <data name="TopOfGreenCannotBeLessThanTopOfYellow" xml:space="preserve">
    <value>Top of Green은 Top of Yellow보다 커야함</value>
  </data>
  <data name="TopOfRed" xml:space="preserve">
    <value>Top of Red</value>
  </data>
  <data name="TopOfYellow" xml:space="preserve">
    <value>Top of Yellow</value>
  </data>
  <data name="TopOfYellowCannotBeLessThanTopOfRed" xml:space="preserve">
    <value>Top of Yellow는 Top of Red 보다 커야함</value>
  </data>
  <data name="TopOfZone" xml:space="preserve">
    <value>Top of Zone</value>
  </data>
  <data name="UDF1" xml:space="preserve">
    <value>User-Defined 1</value>
  </data>
  <data name="UDF2" xml:space="preserve">
    <value>User-Defined 2</value>
  </data>
  <data name="UDF3" xml:space="preserve">
    <value>User-Defined 3</value>
  </data>
  <data name="UDF4" xml:space="preserve">
    <value>User-Defined 4</value>
  </data>
  <data name="UDF5" xml:space="preserve">
    <value>User-Defined 5</value>
  </data>
  <data name="UDF6" xml:space="preserve">
    <value>User-Defined 6</value>
  </data>
  <data name="UDF7" xml:space="preserve">
    <value>User-Defined 7</value>
  </data>
  <data name="UDF8" xml:space="preserve">
    <value>User-Defined 8</value>
  </data>
  <data name="UnitOfMeasure" xml:space="preserve">
    <value>단위</value>
  </data>
  <data name="Units" xml:space="preserve">
    <value>단위</value>
  </data>
  <data name="UserDefinedFields" xml:space="preserve">
    <value>사용자정의필드</value>
  </data>
  <data name="Vendor" xml:space="preserve">
    <value>구매선</value>
  </data>
  <data name="VendorIdentifier" xml:space="preserve">
    <value>구매선코드</value>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Yellow</value>
  </data>
  <data name="ZoneSize" xml:space="preserve">
    <value>Zone Size</value>
  </data>
</root>