<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFiles" xml:space="preserve">
    <value>Add Files</value>
  </data>
  <data name="AllfilesOK" xml:space="preserve">
    <value>All files OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
  <data name="DataImport" xml:space="preserve">
    <value>Data Import</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteAll" xml:space="preserve">
    <value>Delete All</value>
  </data>
  <data name="DeleteFileAndReupload" xml:space="preserve">
    <value>Delete file and re-upload</value>
  </data>
  <data name="ErrorsInUpload" xml:space="preserve">
    <value>Errors In Upload</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="FilesDeletedSuccessfully" xml:space="preserve">
    <value>Files deleted successfully</value>
  </data>
  <data name="ImportStr" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="ImportQueue" xml:space="preserve">
    <value>Import Queue:</value>
  </data>
  <data name="KeyDeletedSuccessfully" xml:space="preserve">
    <value>Deleted successfully</value>
  </data>
  <data name="NoDataToDisplay" xml:space="preserve">
    <value>No data to display</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="ImportMode_Replace_Description" xml:space="preserve">
    <value>Uploaded files contain all records for the upload types</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="TestStatus" xml:space="preserve">
    <value>Test Status</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Uploaded" xml:space="preserve">
    <value>Uploaded</value>
  </data>
  <data name="Uploading" xml:space="preserve">
    <value>Uploading</value>
  </data>
  <data name="InstructionsForUnIdentified" xml:space="preserve">
    <value>Please ensure your System Data Exchange settings are correct</value>
  </data>
  <data name="RegionSettingsDescribed" xml:space="preserve">
    <value>Regional settings are applied to files at upload and not import.</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="RecordsIgnoredMessageFormat" xml:space="preserve">
    <value>{0} records were ignored due to policy configuration</value>
  </data>
  <data name="Records" xml:space="preserve">
    <value>Records</value>
  </data>
  <data name="EncounteredNumErrorsWithUploadFormat" xml:space="preserve">
    <value>Encountered {0} errors. Showing the first {1} errors.</value>
  </data>
  <data name="Import_Button_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Import_Button_Validate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="Import_Nav_BulkEdit" xml:space="preserve">
    <value>Bulk Edit</value>
  </data>
  <data name="Import_Nav_Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="Import_Nav_Errors" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="Import_Nav_Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="Import_Nav_NewUpload" xml:space="preserve">
    <value>New Upload</value>
  </data>
  <data name="Import_Nav_Succeeded" xml:space="preserve">
    <value>Succeeded</value>
  </data>
  <data name="Import_Nav_Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="Import_Tabs_Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="Import_Tabs_Validation" xml:space="preserve">
    <value>Validation</value>
  </data>
  <data name="Import_Validation_Info" xml:space="preserve">
    <value>Additional Information</value>
  </data>
  <data name="Import_Validation_ParsingErrors" xml:space="preserve">
    <value>Parsing Errors</value>
  </data>
  <data name="Import_Validation_ValidationErrors" xml:space="preserve">
    <value>Validation Errors</value>
  </data>
  <data name="Import_Validation_Warnings" xml:space="preserve">
    <value>Validation Warnings</value>
  </data>
  <data name="Import_Nav_Processing" xml:space="preserve">
    <value>Processing</value>
  </data>
  <data name="AllFieldsAreAccepted" xml:space="preserve">
    <value>All fields are accepted</value>
  </data>
  <data name="allowedfields" xml:space="preserve">
    <value>allowed fields</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="ConfigurationImport" xml:space="preserve">
    <value>Configuration Import</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="DataNotValidated" xml:space="preserve">
    <value>Data has not been validated</value>
  </data>
  <data name="DataValidationFailed" xml:space="preserve">
    <value>Data validation failed</value>
  </data>
  <data name="DataValidationPassed" xml:space="preserve">
    <value>Data validation passed</value>
  </data>
  <data name="NewRecordsIncludeAllFields" xml:space="preserve">
    <value>New records include all fields</value>
  </data>
  <data name="ParsingErrors" xml:space="preserve">
    <value>Parsing Errors</value>
  </data>
  <data name="PleaseReviewBeforeProceeding" xml:space="preserve">
    <value>Please review before proceeding</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="ReplacesOrUpdatesRPlusConfiguration" xml:space="preserve">
    <value>Replaces or updates R+ configuration</value>
  </data>
  <data name="SaveAndContinue" xml:space="preserve">
    <value>Save and continue</value>
  </data>
  <data name="SelectType" xml:space="preserve">
    <value>Select type</value>
  </data>
  <data name="StartAndIgnoreErrors" xml:space="preserve">
    <value>Start &amp; Ignore Errors</value>
  </data>
  <data name="StartAnotherUpload" xml:space="preserve">
    <value>Start Another Upload</value>
  </data>
  <data name="SystemImport" xml:space="preserve">
    <value>System Import</value>
  </data>
  <data name="UpdatedRecordsIncludeOnly" xml:space="preserve">
    <value>Updated records include only</value>
  </data>
  <data name="UploadData" xml:space="preserve">
    <value>Upload data</value>
  </data>
  <data name="UploadMoreData" xml:space="preserve">
    <value>Upload More Data</value>
  </data>
  <data name="ValidateData" xml:space="preserve">
    <value>Validate data</value>
  </data>
  <data name="ValidatingYourDataIsRecommended" xml:space="preserve">
    <value>Validating your data prior to import is recommended</value>
  </data>
  <data name="ValidationResults" xml:space="preserve">
    <value>Validation Results</value>
  </data>
  <data name="YourImportIsComplete" xml:space="preserve">
    <value>Your import is complete</value>
  </data>
  <data name="Validating" xml:space="preserve">
    <value>Validating</value>
  </data>
  <data name="YourImportWillBeginProcessingMomentarily" xml:space="preserve">
    <value>Your import will begin processing momentarily</value>
  </data>
  <data name="PleaseEnsureHeadersAreCorrect" xml:space="preserve">
    <value>Please ensure the file headers are correct</value>
  </data>
  <data name="UnableToIdentify" xml:space="preserve">
    <value>Unable to identify one or more uploaded files</value>
  </data>
  <data name="PurgeToolTip" xml:space="preserve">
    <value>This mode is destructive and will delete records that are not in the uploaded files. The exceptions to this are Supply and Demand generated by Material Requirements Planning.</value>
  </data>
</root>